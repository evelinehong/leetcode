static int x = [](){ios::sync_with_stdio(false); cin.tie(nullptr); return 0; }();
class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map <string, vector<string>> map;
        for (string &str: strs){
            string tmp = str;
            sort (tmp.begin(), tmp.end());
            map[tmp].push_back(str);
        }
        vector<vector<string>> anagrams;
        for (auto &temp: map){
            anagrams.push_back(temp.second);
        }
        return anagrams;
    }
};

1. for (string &str: strs) 遍历字符串
for (auto &temp: map) 遍历数组
auto可以替代任何类型。如果不用auto的话就要写：

map<int, int>::iterator iter;
for(iter = _map.begin(); iter != _map.end(); iter++)

非常麻烦
iter.first是key
iter.second是value

c++ 的 range如下：

int my_array[5] = {1, 2, 3, 4, 5};
// 每个数组元素乘于 2
for (int &x : my_array)
{
    x *= 2;
    cout << x << endl;  
}
// auto 类型也是 C++11 新标准中的，用来自动获取变量的类型
for (auto &x : my_array) {
    x *= 2;
    cout << x << endl;  
}